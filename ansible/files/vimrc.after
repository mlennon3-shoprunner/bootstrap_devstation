set nocompatible
filetype on
filetype plugin on
filetype indent on
syntax on

let maplocalleader = "\<Space>"

"More useful command-line completion
set wildmenu

"Line wrap
set wrap

"Auto-completion menu
set wildmode=list:longest

"Map escape key to jj -- much faster
imap jj <esc>

"Bubble single lines (kicks butt)
""http://vimcasts.org/episodes/bubbling-text/
nmap <C-Up> ddkP
nmap <C-Down> ddp

"Bubble multiple lines
"vmap <C-Up> xkP`[V`]
"vmap <C-Down> xp`[V`]

"Source the vimrc file after saving it. This way, you don't have to reload
"Vim to see the changes.
if has("autocmd")
 autocmd bufwritepost .vimrc source $MYVIMRC
endif

nmap <C-b> <C-]>

"    "------------------------"
"    "gERDTREE PLUGIN SETTINGS
"    "------------------------"
"    "Shortcut for NERDTreeToggle
"    nmap ,nt :NERDTreeToggle

"Show hidden files in NerdTree
let NERDTreeShowHidden=1

syntax enable

map <silent> <LocalLeader>cj :!clj %<CR>
map <silent> <LocalLeader>rt :!/usr/local/bin/ctags -R --exclude=".git\|.svn\|log\|tmp\|db\|pkg" --extra=+f<CR>
map <silent> <LocalLeader>nt :NERDTreeToggle<CR>
map <silent> <LocalLeader>nr :NERDTree<CR>
map <silent> <LocalLeader>nf :NERDTreeFind<CR>
map <silent> <LocalLeader>tb :TagbarToggle<CR>
map <silent> <LocalLeader>ff :CtrlP<CR>
map <silent> <LocalLeader>ft :CtrlPTag<CR>
map <silent> <LocalLeader>fb :CtrlPBuffer<CR>
map <silent> <LocalLeader>fr :CtrlPClearAllCache<CR>
map <silent> <LocalLeader>gd :e product_diff.diff<CR>:%!git diff<CR>:setlocal buftype=nowrite<CR>
map <silent> <LocalLeader>pd :e product_diff.diff<CR>:%!svn diff<CR>:setlocal buftype=nowrite<CR>
map <silent> <LocalLeader>nh :noh<CR>
map <silent> <LocalLeader>yr :YRShow<CR>
map <LocalLeader>aw :Ack '<C-R><C-W>'
map <silent> <LocalLeader>bd :bufdo :bd<CR>
nnoremap <silent> <LocalLeader>ee :tabe $MYVIMRC<CR>
nnoremap <silent> <LocalLeader>ss :source $McYVIMRC<CR>
nnoremap <silent> <LocalLeader><CR> :tabe<CR>
nnoremap <silent> <LocalLeader>[ :tabp<CR>
nnoremap <silent> <LocalLeader>] :tabn<CR>
nnoremap <silent> <LocalLeader><Space> :noh<CR>
nnoremap <silent> <LocalLeader>ww :%s/\s\+$//<CR>:let @/=''<CR><C-o>

" leader w to write
nnoremap <LocalLeader>w :w<CR>

"Snipmate
:filetype plugin on

"copy/paste system clipboard"
set clipboard=unnamed
autocmd FileType go autocmd BufWritePre <buffer> Fmt
filetype off
filetype plugin indent off
set runtimepath+=/usr/local/go/misc/vim
filetype plugin indent on
syntax on

"Control-d in visual mode to duplicate the selected text and paste it after
"cursor
vmap <C-d> y'>p
"Enter/shift-enter in normal mode to insert line after/before and remain
"in normal mode
nmap <S-Enter> O<Esc>j
nmap <CR> o<Esc>
"use tidy html5 syntax checking
let g:syntastic_html_tidy_exec = 'tidy5'

"use exuberant ctags
let g:easytags_cmd = '/usr/local/bin/ctags'
let g:easytags_async = 1
"let g:easytags_syntax_keyword = 'always'
let g:easytags_updatetime_min = 5000
let g:easytags_auto_highlight = 0


set scrolloff=4                 " Minimum lines to keep above and below cursor
set splitright                  " Puts new vsplit windows to the right of the current
set splitbelow                  " Puts new split windows to the bottom of the current
